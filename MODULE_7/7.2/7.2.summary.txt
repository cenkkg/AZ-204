1/7/2 ---------------------------------------------------------------------------------------------------------------------
INTRODUCTION

A common challenge for developers is the management of secrets 
    and credentials used to secure communication between different components making up a solution.
Managed identities eliminate the need for developers to manage credentials.

2/7/2 ---------------------------------------------------------------------------------------------------------------------
Explore managed identities...
A common challenge for developers is the management of secrets, credentials, certificates, and keys used to secure communication between services.

!!!
While developers can securely store the secrets in Azure Key Vault, 
    services need a way to access Azure Key Vault. 
Managed identities provide an automatically managed identity in Azure Active Directory (Azure AD) 
    for applications to use when connecting to resources that support Azure AD authentication. 
Applications can use managed identities to obtain Azure AD tokens without having to manage any credentials.
!!!

Types of managed identities...
There are two types of managed identities:
    + A system-assigned managed identity is enabled directly on an Azure service instance.
    + A user-assigned managed identity.

Characteristics of managed identities...
    + Creation
    + Lifecycle
    + Sharing across Azure resources

When to use managed identities...
For example, you can use managed identities if you want to build an app using Azure App Services that accesses 
    Azure Storage without having to manage any credentials.

What Azure services support managed identities?...
Managed identities for Azure resources can be used to authenticate to services that support Azure Active Directory authentication.

3/7/2 ---------------------------------------------------------------------------------------------------------------------
Discover the managed identities authentication flow...

*** How a system-assigned managed identity works with an Azure virtual machine...
1- Azure Resource Manager receives a request to enable the system-assigned managed identity on a virtual machine.
2- Azure Resource Manager creates a service principal in Azure Active Directory for the identity of the virtual machine. 
    The service principal is created in the Azure Active Directory tenant that's trusted by the subscription.
3- Azure Resource Manager configures the identity on the virtual machine by updating the Azure Instance Metadata Service identity endpoint 
    with the service principal client ID and certificate.
4- After the virtual machine has an identity, 
        use the service principal information to grant the virtual machine access to Azure resources. 
    To call Azure Resource Manager, use role-based access control in Azure Active Directory 
        to assign the appropriate role to the virtual machine service principal. 
    To call Key Vault, grant your code access to the specific secret or key in Key Vault.
5- Your code that's running on the virtual machine can request a token from the Azure Instance Metadata service endpoint, 
    accessible only from within the virtual machine: http://169.254.169.254/metadata/identity/oauth2/token
6- A call is made to Azure Active Directory to request an access token (as specified in step 5) by using the client ID and certificate configured in step 3. 
    Azure Active Directory returns a JSON Web Token (JWT) access token.
7- Your code sends the access token on a call to a service that supports Azure Active Directory authentication.

*** How a user-assigned managed identity works with an Azure virtual machine...
1- Azure Resource Manager receives a request to create a user-assigned managed identity.
2- Azure Resource Manager creates a service principal in Azure Active Directory for the user-assigned managed identity.
     The service principal is created in the Azure Active Directory tenant that's trusted by the subscription.
3- Azure Resource Manager receives a request to configure the user-assigned managed identity on a virtual machine and updates the Azure Instance Metadata Service identity endpoint
     with the user-assigned managed identity service principal client ID and certificate.
4- After the user-assigned managed identity is created, use the service principal information to grant 
    the identity access to Azure resources. To call Azure Resource Manager, 
    use role-based access control in Azure Active Directory to assign the appropriate role to 
    the service principal of the user-assigned identity. To call Key Vault, grant your code access 
    to the specific secret or key in Key Vault.
5- Your code that's running on the virtual machine can request a token from the Azure Instance Metadata Service identity endpoint, 
    accessible only from within the virtual machine: http://169.254.169.254/metadata/identity/oauth2/token
6- A call is made to Azure Active Directory to request an access token (as specified in step 5) by using the client ID 
    and certificate configured in step 3. Azure Active Directory returns a JSON Web Token (JWT) access token.
7- Your code sends the access token on a call to a service that supports Azure Active Directory authentication.

4/7/2 ---------------------------------------------------------------------------------------------------------------------
Configure managed identities...
You can configure an Azure virtual machine with a managed identity during, or after, the creation of the virtual machine. 

System-assigned managed identity...
!!!
To create, or enable, an Azure virtual machine with the system-assigned managed identity 
    your account needs the Virtual Machine Contributor role assignment.
!!!

*** Enable system-assigned managed identity during creation of an Azure virtual machine...
"""
    az vm create --resource-group myResourceGroup \ 
    --name myVM --image win2016datacenter \ 
    --generate-ssh-keys \ 
    --assign-identity \ 
    --role contributor \
    --scope mySubscription \
    --admin-username azureuser \ 
    --admin-password myPassword12
"""

Enable system-assigned managed identity on an existing Azure virtual machine...
"""
    az vm identity assign -g myResourceGroup -n myVm
"""

*** User-assigned managed identity
Create a user-assigned identity...
The -g parameter specifies the resource group where the user-assigned managed identity is created, 
    and the -n parameter specifies its name.
"""
    az identity create -g myResourceGroup -n myUserAssignedIdentity
"""

Assign a user-assigned managed identity during the creation of an Azure virtual machine...
"""
    az vm create \
    --resource-group <RESOURCE GROUP> \
    --name <VM NAME> \
    --image UbuntuLTS \
    --admin-username <USER NAME> \
    --admin-password <PASSWORD> \
    --assign-identity <USER ASSIGNED IDENTITY NAME> \
    --role <ROLE> \
    --scope <SUBSCRIPTION>
"""

Assign a user-assigned managed identity to an existing Azure virtual machine...
"""
    az vm identity assign \
        -g <RESOURCE GROUP> \
        -n <VM NAME> \
        --identities <USER ASSIGNED IDENTITY>
"""

5/7/2 ---------------------------------------------------------------------------------------------------------------------
