AZ-204 - Module 4


1/8/2 ——————————————————————————————————————————

INTRODUCTION

2/8/2 ——————————————————————————————————————————

Explore Microsoft .NET SDK v3 for Azure Cosmos DB

You can also look at the "https://github.com/Azure/azure-cosmos-dotnet-v3/tree/master/Microsoft.Azure.Cosmos.Samples/Usage" 
for CRUD operations for Azure Cosmos DB.

3/8/2 ——————————————————————————————————————————

EXERCISE

4/8/2 ——————————————————————————————————————————

Create stored procedures.

Azure Cosmos DB provides language-integrated, transactional execution of JavaScript that lets you write stored procedures, triggers, and user-defined functions (UDFs).

Writing stored procedures:
Stored procedures can create, update, read, query, and delete items inside an Azure Cosmos container. Stored procedures are registered per collection, and can operate on any document or an attachment present in that collection.
var helloWorldStoredProc = {
    id: "helloWorld",
    serverScript: function () {
        var context = getContext();
        var response = context.getResponse();

        response.setBody("Hello, World");
    }
}
The context object provides access to all operations that can be performed in Azure Cosmos DB, 
and access to the request and response objects. 
In this case, you use the response object to set the body of the response to be sent back to the client.


Create an item using stored procedure:
When you create an item by using stored procedure, it's inserted into the Azure Cosmos container and an ID for the newly created item is returned. Creating an item is an asynchronous operation and depends on the JavaScript callback functions. 

var createDocumentStoredProc = {
    id: "createMyDocument",
    body: function createMyDocument(documentToCreate) {
        var context = getContext();
        var collection = context.getCollection();
        var accepted = collection.createDocument(collection.getSelfLink(),
              documentToCreate,
              function (err, documentCreated) {
                  if (err) throw new Error('Error' + err.message);
                  context.getResponse().setBody(documentCreated.id)
              });
        if (!accepted) return;
    }
}

Bounded execution:
All Azure Cosmos DB operations must complete within a limited amount of time. 
Stored procedures have a limited amount of time to run on the server. 
All collection functions return a Boolean value that represents whether that operation completes or not.

Transactions within stored procedures:
