1/8/1 ---------------------------------------------------------------------------------------------------------------------
INTRODUCTION
!!! Instrumenting and monitoring, your apps helps you maximize their availability and performance. !!!

2/8/1 ---------------------------------------------------------------------------------------------------------------------
Explore Application Insights...
    Application Insights is an extension of Azure Monitor and provides Application Performance Monitoring (also known as “APM”) features.
    APM tools are useful to monitor applications from development, through test, and into production in the following ways:
        + Proactively understand how an application is performing.
        + Reactively review application execution data to determine the cause of an incident.

    !!!
        In addition to collecting metrics and application telemetry data, which describe application activities and health, 
            Application Insights can also be used to collect and store application trace logging data.
    !!!

    Application Insights feature overview:
        + Live Metrics -- Observe activity from your deployed application in real time with no effect on the host environment.
        + Availability -- Also known as “Synthetic Transaction Monitoring”, probe your applications external endpoint(s) to test the overall availability and responsiveness over time.
        + GitHub or Azure DevOps integration -- Create GitHub or Azure DevOps work items in context of Application Insights data.

    What Application Insights monitors:
        Application Insights collects Metrics and application Telemetry data, which describe application activities and health, as well as trace logging data:
            + Request rates, response times, and failure rates
            + Dependency rates, response times, and failure rates
            + Exceptions
            + Page views and load performance
                ...

    Getting started with Application Insights:
        Application Insights is one of the many services hosted within Microsoft Azure, and telemetry is sent there for analysis and presentation.
        There are several ways to get started monitoring and analyzing app performance:
            + At run time: instrument your web app on the server.
            + At development time: add Application Insights to your code.
            + Instrument your web pages for page view, AJAX, and other client-side telemetry.
            + Analyze mobile app usage by integrating with Visual Studio App Center.
            + Availability tests - ping your website regularly from our servers.

3/8/1 ---------------------------------------------------------------------------------------------------------------------
Discover log-based metrics...
    Application Insights log-based metrics let you analyze the health of your monitored apps, create powerful dashboards, and configure alerts.
    There are two kinds of metrics:
        + Log-based metrics behind the scene are translated into Kusto queries from stored events.
        + Standard metrics are stored as pre-aggregated time series.

    ! Since standard metrics are pre-aggregated during collection, they have better performance at query time. !
        Standard metrics are a better choice for dashboarding and in real-time alerting.
    ! The log-based metrics have more dimensions, which makes them the superior option for data analysis and ad-hoc diagnostics. !

        *** Log-based metrics:
            Developers can use the SDK to send events manually (by writing code that explicitly invokes the SDK) or they can rely on the automatic collection of events from auto-instrumentation.
            !!!
                In either case, the Application Insights backend stores all collected events as logs, 
                    and the Application Insights blades in the Azure portal act as an analytical and diagnostic 
                    tool for visualizing event-based data from logs.
            !!!
        
        *** Pre-aggregated metrics:
            !!!
                The pre-aggregated metrics aren't stored as individual events with lots of properties. 
                Instead, they're stored as pre-aggregated time series, and only with key dimensions. 
                This makes the new metrics superior at query time: retrieving data happens faster and requires less compute power. 
                This enables new scenarios such as near real-time alerting on dimensions of metrics, more responsive dashboards, and more.
            !!!

4/8/1 ---------------------------------------------------------------------------------------------------------------------
Instrument an app for monitoring...
    Application Insights is enabled through 
        + either Auto-Instrumentation (agent) or 
        + by adding the Application Insights SDK to your application code.

    1- Auto-instrumentation:
        Auto-instrumentation is the preferred instrumentation method.
        It requires no developer investment and eliminates future overhead related to updating the SDK.
        It's also the only way to instrument an application in which you don't have access to the source code.

        !!! In essence, all you have to do is enable and - in some cases - configure the agent, which collects the telemetry automatically. !!!

    2- Enabling via Application Insights SDKs:
        You only need to install the Application Insights SDK in the following circumstances:
            + You require custom events and metrics
            + You require control over the flow of telemetry
            + Auto-Instrumentation isn't available (typically due to language or platform limitations)
        !!! To use the SDK, you install a small instrumentation package in your app and then instrument the web app, any background components, and JavaScript within the web pages. !!!
        !!! The app and its components don't have to be hosted in Azure. !!!

        !!! Enable via OpenCensus... !!!!
            In addition to the Application Insights SDKs, Application Insights also supports distributed tracing through OpenCensus. 
            OpenCensus is an open source, vendor-agnostic, single distribution of libraries to provide metrics collection and distributed tracing for services.
            It also enables the open source community to enable distributed tracing with popular technologies like Redis, Memcached, or MongoDB.

5/8/1 ---------------------------------------------------------------------------------------------------------------------
Select an availability test...
    After you've deployed your web app or website, you can set up recurring tests to monitor availability and responsiveness. 
    ! Application Insights sends web requests to your application at regular intervals from points around the world. !

    You can set up availability tests for any HTTP or HTTPS endpoint that's accessible from the public internet.
    You don't have to make any changes to the website you're testing. In fact, it doesn't even have to be a site that you own.
    You can test the availability of a REST API that your service depends on.

    ! You can create up to 100 availability tests per Application Insights resource, and there are three types of availability tests: !
        + URL ping test (classic)
        + Standard test (Preview)
        + Custom TrackAvailability test

6/8/1 ---------------------------------------------------------------------------------------------------------------------
Troubleshoot app performance by using Application Map...    
    ! Application Map helps you spot performance bottlenecks or failure hotspots across all components of your distributed application. !
    Each node on the map represents an application component or its dependencies; and has health KPI and alerts status.
    !!! Components are independently deployable parts of your distributed/microservices application. !!!
    Developers and operations teams have code-level visibility or access to telemetry generated by these application components:
        + Components are different from "observed" external dependencies such as SQL, Event Hubs, etc. which your team/organization may not have access to (code or telemetry).
        + Components run on any number of server/role/container instances.
        + Components can be separate Application Insights instrumentation keys (even if subscriptions are different) or different roles reporting to a single Application Insights instrumentation key.
            !!! The preview map experience shows the components regardless of how they're set up. !!!
        
    You can see the full application topology across multiple levels of related application components.
    Components could be different Application Insights resources, or different roles in a single resource.

7/8/1 ---------------------------------------------------------------------------------------------------------------------
TEST 

8/8/1 ---------------------------------------------------------------------------------------------------------------------
SUMMARY